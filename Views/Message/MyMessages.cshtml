@model MessagesAndFriendsViewModel
@{
    ViewData["Title"] = "MyMassages";
    Layout = "~/Views/Shared/LayoutPage.cshtml";
}


<!--Profile Top Nav-->
<vc:profile-nav></vc:profile-nav>
<!--Profile Top Nav-->
<style>

    .message-bubble {
        position: absolute;
        background-color: #f1f1f1;
        border: 1px solid #d4d4d4;
        padding: 10px;
        border-radius: 8px;
        display: none;
        z-index: 1;
    }


    .message-button {
        background-color: #4CAF50;
        color: white;
        padding: 5px 10px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }
</style>

<section>
    <div class="gap gray-bg">
        <div class="container-fluid">
            <div class="row">
                <div class="col-lg-12">
                    <div class="row" id="page-contents">
                        <div class="col-lg-3">
                            <aside class="sidebar static">
                                <!--ShortCuts-->
                                <partial name="ShortCutsPartialView" />
                                <!--ShortCuts-->
                            </aside>
                        </div><!-- sidebar -->
                        <div class="col-lg-6">
                            <div class="central-meta" style="height:600px">
                                <div class="messages">
                                    <h5 class="f-title"><i class="ti-comments-smiley"></i>Tüm Mesajlar</h5>
                                    <div class="message-box">
                                        <ul class="peoples" id="peopleList">
                                            @foreach (var message in Model.Messages)
                                            {
                                                <li>

                                                    <figure>
                                                        <img src=@message.User.UserProfilePicture alt="">
                                                        <span class="status f-@(message.User.UserIsOnline?"online":"off")"></span>
                                                    </figure>
                                                    <div class="people-name" onclick="messageFriend('@message.Id')">
                                                        <span>@message.User.UserFirstName @message.User.UserLastName</span>
                                                    </div>
                                                </li>


                                            }

                                        </ul>
                                        <div class="peoples-mesg-box">
                                            <div class="conversation-head" style="display:none;" id="nameBox">
                                                <figure><img src="images/resources/friend-avatar.jpg" id="targetUserPic" alt=""></figure>
                                                <span id="nemeArea"></span>
                                                <input id="targetUserId" type="hidden" />
                                                <input id="messageId" type="hidden" />
                                            </div>
                                            <ul class="chatting-area" style="height:1000px">
                                            </ul>
                                            <div class="message-text-container" style="display:none;" id="messageBox">
                                                <form method="post" >
                                                    <textarea id="textMessage"></textarea>
                                                    <button title="send" type="submit" onclick="send(event)"><i class="fa fa-paper-plane"></i></button>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div><!-- centerl meta -->
                        <div class="col-lg-3">
                            <aside class="sidebar static">
                                <div class="widget friend-list stick-widget" id="friendsList" style="height:600px">
                                    <h4 class="widget-title">Arkadaşlar</h4>
                                    <div id="searchDir"></div>
                                    <ul id="people-list" class="friendz-list">
                                        @foreach (var friend in Model.Friends)
                                        {
                                            <li onmouseover="showMessageButton('@friend.Friend.UserId')" onmouseout="hideMessageButton('@friend.Friend.UserId')">
                                                <div id="messageBubble_@friend.Friend.UserId" class="message-bubble">
                                                    <button class="message-button" onclick="sendMessage('@friend.Friend.UserId')">Mesaj Gönder</button>
                                                </div>
                                                <figure>
                                                    <img src=@friend.Friend.UserProfilePicture alt="">
                                                    <span class="status f-@(friend.Friend.UserIsOnline?"online":"off")"></span>
                                                </figure>
                                                <div class="friendz-meta">
                                                    <a href="#">@friend.Friend.UserFirstName @friend.Friend.UserLastName</a>

                                                </div>

                                            </li>
                                        }

                                    </ul>


                                </div><!-- friends list sidebar -->
                            </aside>
                        </div><!-- sidebar -->
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>



@section Scripts {
    <script src="~/lib/signalr/dist/browser/signalr.min.js"></script>
    <script src="~/js/chat.js"></script>
    <script>
        localStorage.setItem('newMessage', false);
        var model = @Html.Raw(Json.Serialize(Model.Messages));
        var friends = @Html.Raw(Json.Serialize(Model.Friends));
        var userProfilPic = @Html.Raw(Json.Serialize(Model.UserProfilPic));
        var userId = @ViewBag.userId;


        //kişinin veri tabanında olan mesajlarını seçilen kşiye göre getirir
        function messageFriend(id) {
            model.forEach(function (message) {
                if (message.id == id) {
                    var messages = message;
                    document.getElementById('messageBox').style.display = 'block';
                    document.getElementById('nameBox').style.display = 'block';

                    $("#nemeArea").empty();
                    var spanName = document.getElementById('nemeArea');
                    var text = document.createTextNode(messages.user.userFirstName + ' ' + messages.user.userLastName);
                    spanName.appendChild(text);
                    $('#targetUserId').val(messages.user.userId);
                    $('#messageId').val(messages.id);
                    $('#targetUserPic').attr("src", messages.user.userProfilePicture)



                    var targetUserId = messages.user.userId;



                    $(".chatting-area").empty();

                    var messageHtml = '';

                    messages.messageDetails.forEach(function (chat) {
                        var messageClass = chat.ownerUserId == userId ? "me" : "you";
                        var messageContent = chat.messageContent;
                        var sendDate = new Date(chat.sendDate);
                        var formattedMessageContent = messageContent.replace(/(.{50})/g, "$1<br>");

                        messageHtml += '<li class="' + messageClass + '">';
                        messageHtml += '<figure><img src="' + (messageClass == "me" ? '' + userProfilPic + '' : '' + messages.user.userProfilePicture + '') + '" alt=""></figure>';
                        messageHtml += '<p>' + formattedMessageContent + '<span style="float:right; font-size:12px;">' + sendDate.toLocaleString('tr-TR') + '</span></p>';
                        messageHtml += '</li>';
                    });

                    $(".chatting-area").append(messageHtml);
                    scrollToBottom();
                    // $(".chatting-area").append(targetUserIdHtml);

                }
            });
        };
        //---------------------------------------WebSockets --------------------------------------------------------

        "use strict";



        //mesaj gönderim işlemi
        function send(event) {
            var message = $('#textMessage').val()
            event.preventDefault();
            connection.invoke("MessageSend", message, $('#targetUserId').val(), $('#messageId').val());

            var messageHtml = '';
            messageHtml += '<li class="me">';
            messageHtml += '<figure><img src="' + userProfilPic + '" alt=""></figure>';
            messageHtml += '<p>' + message + '<span style="float:right; font-size:12px;">' + new Date().toLocaleString('tr-TR') + '</span></p>';
            messageHtml += '</li>';

            $(".chatting-area").append(messageHtml);
            $('#textMessage').val('');
            scrollToBottom();
            model.forEach(function (chat) {

                if (chat.id == $('#messageId').val()) {

                    var newMessage = {
                        sendDate: new Date(),
                        messageContent: message,
                        messageId: chat.id,
                        ownerUserId: userId
                    };

                    chat.messageDetails.push(newMessage);
                }
            })
        }




        //------------------------------------------WebSockets-------------------------------------------------------------

        //mesajların hep en alt kısmını gösterir
        function scrollToBottom() {
            var chattingArea = $(".chatting-area");
            chattingArea.scrollTop(chattingArea[0].scrollHeight);
        }





        //  arkadaşlar listesinde üerine gelinen kşi için mesaj gönder butonu çıkarır
        function showMessageButton(userId) {
            var bubble = document.getElementById('messageBubble_' + userId);
            bubble.style.display = 'block';
        }

        function hideMessageButton(userId) {
            var bubble = document.getElementById('messageBubble_' + userId);
            bubble.style.display = 'none';
        }

        function sendMessage(userId) {
            // Burada mesaj gönderme işlemleri yapabilirsiniz.
            //alert('Mesaj gönderildi! Kullanıcı ID: ' + userId);

            //var messages = @Html.Raw(Json.Serialize(Model.Messages));
            var msg = false;
            // console.log(messages);
            model.forEach(function (message) {
                if (message.user.userId == userId) {
                    messageFriend(message.id);
                    msg = true;
                    console.log("if");
                }
                console.log("for");
            })
            if (msg == false) {
                //yeni konuşma açılır veri tabanına ve id si alınır
                $.ajax({
                    type: "POST",
                    url: "/Message/StartNewChat/",
                    data: { userId: userId },
                    success: function (result) {


                        friends.forEach(function (friend) {
                            if (friend.friend.userId == userId) {


                                var newPerson = {
                                    id: result,
                                    user: {
                                        userId: friend.friend.userId,
                                        userProfilePicture: friend.friend.userProfilePicture,
                                        userIsOnline: friend.friend.userIsOnline,
                                        userFirstName: friend.friend.userFirstName,
                                        userLastName: friend.friend.userLastName
                                    },
                                    messageDetails: []
                                };

                                // Yeni kişiyi temsil eden HTML oluşturun
                                var newPersonHtml = '<li>' +
                                    '<figure>' +
                                    '<img src="' + newPerson.user.userProfilePicture + '" alt="">' +
                                    '<span class="status f-' + (newPerson.user.userIsOnline ? 'online' : 'off') + '"></span>' +
                                    '</figure>' +
                                    '<div class="people-name" data-id="' + newPerson.id + '">' +
                                    '<span>' + newPerson.user.userFirstName + ' ' + newPerson.user.userLastName + '</span>' +
                                    '</div>' +
                                    '</li>';

                                // HTML'i listeye ekleyin
                                var peopleList = document.getElementById('peopleList');
                                if (peopleList) {
                                    var tempDiv = document.createElement('div');
                                    tempDiv.innerHTML = newPersonHtml;

                                    var newPersonElement = tempDiv.firstChild;
                                    peopleList.appendChild(newPersonElement);
                                    model.push(newPerson);
                                    messageFriend(result);
                                    // Olayı ekleyin
                                    var peopleName = newPersonElement.querySelector('.people-name');
                                    if (peopleName) {
                                        peopleName.addEventListener('click', function () {
                                            var personId = this.getAttribute('data-id');
                                            messageFriend(personId);
                                        });
                                    }
                                }
                            }
                        });


                    },
                    error: function (xhr, status, error) {
                        console.error("Yeni Mesaj AJAX Hatası:", status, error);
                    }
                });

            }



        }



    </script>
}
