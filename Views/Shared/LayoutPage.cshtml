@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="" />
    <meta name="keywords" content="" />
    <title>Winku Social</title>
    <link rel="icon" href="~/SocialUI/images/fav.png" type="image/png" sizes="16x16">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"/>
    <link rel="stylesheet" href="~/SocialUI/css/main.min.css">
    <link rel="stylesheet" href="~/SocialUI/css/style.css">
    <link href="~/css/site.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/SocialUI/css/color.css">
    <link rel="stylesheet" href="~/SocialUI/css/responsive.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>

        .top-search {
            float: left;
            position: relative;
        }

        /* Arama sonuçlarının stil ayarları */
        #searchResults {
            position: absolute;
            top: 100%;
            left: 0;
            width: 100%;
            background-color: #f4f2f2;
            display: none;
            z-index: 1;
            margin-top: 5px; /* Arama sonuçları ile input arasındaki boşluğu ayarlar */
            border: 1px solid #ccc; /* Sonuç kutusuna çerçeve ekler */
            box-shadow: 0 0 5px rgba(0, 0, 0, 0.1); /* Gölge efekti ekler */
        }

        .result-item {
            padding: 10px;
            border-bottom: 1px solid #ced4da; /* Her sonuç arasına ince bir çizgi ekler */
            cursor: pointer;
            display: flex; /* Elemanları yatay hizalar */
            align-items: center; /* Elemanları dikey hizalar */
        }

            .result-item img {
                border-radius: 50%; /* Resmi yuvarlar */
                margin-right: 10px; /* Resim ile metin arasındaki boşluğu ayarlar */
                width: 50px;
            }

        /* Diğer stiller buraya eklenebilir */

    </style>
</head>
<body>
    <!--<div class="se-pre-con"></div>-->
    <div class="theme-layout">

        <div class="responsive-header">
            <div class="mh-head first Sticky">
                <span class="mh-btns-left">
                    <a class="" href="#menu"><i class="fa fa-align-justify"></i></a>
                </span>
                <span class="mh-text">
                    <a href="newsfeed.html" title=""><img src="SocialUI/images/logo2.png" alt=""></a>
                </span>
              
            </div>
            <div class="mh-head second">
                <form class="mh-form">
                    <input placeholder="search" />
                    <a href="#/" class="fa fa-search"></a>
                </form>
            </div>
            <nav id="menu" class="res-menu">
                <ul>              
                    <li><a href="/Home" title="">Anasayfa</a></li>
                    <li><a href="/Profile/myprofile" title="">Profilim</a></li>
                    <li><a href="/profile/myFriends" title="">Arkadaşlarım</a></li>
                    <li><a href="/profile/myPhotos" title="">Fotoğraflarım</a></li>
                    <li><a href="/profile/myVideos" title="">Videolarım</a></li>
                    <li><a href="/Message/MyMessages" title="">Mesajlarım</a></li>
                    <li><a href="widgets.html" title="">Bildirimlerim</a></li>
                </ul>
            </nav>
            <nav id="shoppingbag">
    
            </nav>
        </div><!-- responsive header -->

        <div class="topbar stick">
            <div class="logo">
                <a title="" href="/Home"><img src="~/SocialUI/images/logo.png" alt=""></a>
            </div>

            <div class="top-area">
                <div class="top-search">
                    <form method="post" class="">
                        <input type="text" placeholder="Arkadaş Ara..." oninput="searchTop(this.value)">
                        <button data-ripple><i class="ti-search"></i></button>
                    </form>
                    <div id="searchResults"></div>
                </div>
                <!--Mesaj ve bildirimler-->
               <vc:notification-and-messages-info></vc:notification-and-messages-info>
                <!--Mesaj ve bildirimler-->
                <div class="user-img">
                    <vc:name></vc:name>
                    <div class="user-setting">
                        <a href="javascript:void(0)" onclick="turnOnlineOfflineUser('Online')"><span class="status f-online"></span>Çevrimiçi</a>
                        <a href="javascript:void(0)" onclick="turnOnlineOfflineUser('Offline')"><span class="status f-off"></span>Çevrimdışı</a>
                        <a href="javascript:void(0)" onclick="viewProfile()"><i class="ti-user"></i> Profil</a>
                        <a href="javascript:void(0)" onclick="viewEditUser()"><i class="ti-pencil-alt"></i>Profili Düzenle</a>
                        <a href="javascript:void(0)" onclick="accountSettings()"><i class="ti-settings"></i>Hesap Ayarları</a>
                        <a href="javascript:void(0)" onclick="logout()"><i class="ti-power-off"></i>Çıkış Yap</a>
                    </div>
                </div>

            </div>
        </div><!-- topbar -->
        @RenderBody()




    </div>
    <script>
        function viewProfile() {
            window.location.href = "https://localhost:7184/Profile/myprofile";
        }
        function notification() {
            window.location.href = "https://localhost:7184/Profile/MyNotifications";
        }
        function homebutton() {
            window.location.href = "https://localhost:7184/Home";
        }

        function viewEditUser() {
            window.location.href = "https://localhost:7184/Profile/EditUserInfo";
        }
        function accountSettings() {
            window.location.href = "https://localhost:7184/Profile/EditUserSettings";
        }
        async function getFilteredResults(query) {
            // AJAX isteğini yapan fonksiyonu Promise döndürecek şekilde düzenledik
            return new Promise((resolve, reject) => {
                $.ajax({
                    type: "GET",
                    url: "/Account/GetAllUsers",
                    success: function (result) {
                        // AJAX isteği başarılı olduğunda Promise'i çözer
                        const filteredUsers = result.filter(user =>
                            user.userFirstName.toLowerCase().includes(query.toLowerCase()) ||
                            user.userLastName.toLowerCase().includes(query.toLowerCase())
                        );
                        var filtUsers = filteredUsers.slice(0, 5);
                        resolve(filtUsers);
                    },
                    error: function (error) {
                        // AJAX isteği hata döndüğünde Promise'i reddeder
                        reject(error);
                    }
                });
            });
        }

        // User online ve offline butonu fonksiyonları.
        function turnOnlineOfflineUser(type) {
            $.ajax({
                type: "GET",
                url: "/Profile/TurnOnlineOfflineUser",
                data: { type: type },
                success: function (result) {
                    if (result.success) {
                        var onlineOfflineSpan = document.getElementById('onlineOfflineSpan');
                        if (type == "Online") {
                            onlineOfflineSpan.classList.add('f-online');
                            onlineOfflineSpan.classList.remove('f-off');
                        }
                        else {
                            onlineOfflineSpan.classList.remove('f-online');
                            onlineOfflineSpan.classList.add('f-off');
                        }
                    }
                    else {
                        console.log("başarısız")
                    }
                }
            })
        }

        function logout() {
            $.ajax({
                type: "GET",
                url: "/Account/Logout",
                success: function (data) {
                    console.log(data);

                    if (data.success) {
                        window.location.href = "/Account/Index";
                    } else {
                        alert("Çıkış Hatalı");
                    }
                },
                error: function () {
                    alert("An error occurred during logout");
                }
            });
        }

        async function searchTop(query) {
            const searchResultsContainer = document.getElementById("searchResults");

            try {
                // Asenkron işlemi bekleyerek filtrelenmiş sonuçlar
                const filteredResults = await getFilteredResults(query);
                searchResultsContainer.innerHTML = "";
                filteredResults.forEach(result => {
                    const resultElement = document.createElement("div");
                    resultElement.classList.add("result-item");

                    const imgElement = document.createElement("img");
                    imgElement.src = result.userProfilePicture;
                    imgElement.alt = result.userFirstName;
                    resultElement.appendChild(imgElement);

                    const nameElement = document.createElement("div");
                    nameElement.textContent = result.userFirstName +" " + result.userLastName;
                    resultElement.appendChild(nameElement);

                    // click event'i 
                    resultElement.addEventListener("click", () => {
                        window.location.href = "https://localhost:7184/Profile/OtherProfile/" + result.userId;
                    });

                    searchResultsContainer.appendChild(resultElement);
                });

                // Arama sonuçlarını göster veya gizle
                searchResultsContainer.style.display = query.trim() === "" ? "none" : "block";
            } catch (error) {
                console.error("Hata oluştu:", error);
            }
        }
        const searchInput = document.querySelector("input[type='text']");

        // inputa herhangi bir şey yazıldığında searchResultsContainer'ı göster
        searchInput.addEventListener("input", function () {
            const searchResultsContainer = document.getElementById("searchResults");
            searchResultsContainer.style.display = this.value.trim() === "" ? "none" : "block";
        });

        // sayfa üzerinde herhangi bir yere tıklandığında searchResultsContainer'ı gizle
        document.addEventListener("click", function (event) {
            const searchResultsContainer = document.getElementById("searchResults");

            // tıklanan öğe searchResultsContainer içinde değilse, searchResultsContainer'ı gizle
            if (!searchInput.contains(event.target) && !searchResultsContainer.contains(event.target)) {
                searchResultsContainer.style.display = "none";
            }
        });
    </script>
    <script src="~/lib/signalr/dist/browser/signalr.min.js"></script>
    <script src="~/js/signalRConnection.js"></script>
    <script src="~/js/notification.js"></script>
    <script src="~/js/friend.js"></script>
    <script src="~/js/site.js"></script>
    <script src="~/SocialUI/js/main.min.js"></script>
    <script src="~/SocialUI/js/script.js"></script>
    <script src="~/SocialUI/js/map-init.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

    @await RenderSectionAsync("Scripts", required: false)

</body>
</html>
